cmake_minimum_required(VERSION 3.16)

# Project name and language
project(PyBindings LANGUAGES CXX VERSION 1.0.0)

# Set C++ standard (C++17)
set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED ON)

# Global compiler flags
add_compile_options(-Wall -Wextra -Wpedantic -Werror)

# Solve CMP0148 policy problem
if (POLICY CMP0148)
    cmake_policy(SET CMP0148 NEW)
endif()

# Set PYBIND11_FINDPYTHON to avoid deprecated warnings
# set(PYBIND11_FINDPYTHON ON)

# Set CMAKE_PREFIX_PATH for finding pybind11
# set(CMAKE_PREFIX_PATH "/home/elena/miniconda3/lib/python3.12/site-packages/pybind11/share/cmake")

# Find required packages
find_package(pybind11 REQUIRED)
find_package(GSL REQUIRED)
find_package(Boost REQUIRED COMPONENTS json system filesystem)

# Verify Boost
if (NOT Boost_FOUND)
    message(FATAL_ERROR "Boost not found")
endif()
message(STATUS "Boost found: ${Boost_INCLUDE_DIRS}")

# Include directories
include_directories(
    ${Boost_INCLUDE_DIRS}
    ${GSL_INCLUDE_DIRS}
    include
)

# Python bindings for DataFrame (includes DataFrame.cpp directly)
pybind11_add_module(dataframe_bindings
    bindings/DataFrameBindings.cpp
    src/DataFrame.cpp
)

# Link Boost and GSL to DataFrame module
target_link_libraries(dataframe_bindings PRIVATE
    Boost::boost
    Boost::json
    Boost::filesystem
    Boost::system
    GSL::gsl
)

# Python bindings for Interpolation (includes all interpolation sources directly)
pybind11_add_module(interpolation_bindings
    bindings/InterpolationBindings.cpp
    src/Interpolator.cpp
    src/LinearInterpolator.cpp
    src/NewtonInterpolator.cpp
    src/GslPolynomialInterpolator.cpp
    src/CardinalCubicSpline.cpp
)

# Link Boost and GSL to Interpolation module
target_link_libraries(interpolation_bindings PRIVATE
    Boost::boost
    Boost::system
    GSL::gsl
)

message(STATUS "Configuration complete. Ready to build!")
